{"tagline":"Leaflet plugin for loading a CSV file as geoJSON layer","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Leaflet.GeoCSV","google":"","body":"Descripción\r\n-----------\r\n\r\nPlugin para [Leaflet](https://github.com/CloudMade/Leaflet) que permite cargar un archivo CSV como capa geoJSON.\r\n\r\n¿Por qué GeoCSV?\r\n----------------\r\n\r\n*  **Comodidad**: CSV es un formato abierto muy simple para representar un conjunto de datos en forma de tabla. Cualquier hoja de cálculo, por ejemplo, puede importar/exportar fácilmente a este formato.\r\n*  **Por razones de peso**: Cuando se trata de representar un conjunto grande de marcadores en un mapa, el fichero geoJSON generado puede ocupar 4 veces más que la misma información contenida en un CSV. Este plugin permite que transmitas el fichero CSV y realiza la conversión al geoJSON equivalente en el lado del cliente, ahorrando ancho de banda a tu servidor y disminuyendo el tiempo de carga de tu página. En este escenario recomendamos usarlo junto al fantástico plugin [MarkerCluster](https://github.com/danzel/Leaflet.markercluster). Ejemplo: [Mapa de las sucursales de Bankia: GeoCSV+MarkerCluster](example/bankia/index.html)\r\n\r\nDescarga mínima\r\n---------------\r\n*  [leaflet.geocsv.js](leaflet.geocsv.js): Sólo plugin 2,4K. Menos de 1K comprimido.\r\n\r\nOpciones\r\n--------\r\n\r\nLeaflet GeoCSV hereda de [GeoJSON](http://leafletjs.com/reference.html#geojson), por lo que pueden usarse todas las opciones y métodos de la superclase. Además define las siguientes opciones propias:\r\n\r\n*  **titles**: Array con los rótulos o títulos de los campos en el orden en el que aparecen en el CSV. Hay dos títulos especiales que deben aparecer siempre con el mismo nombre: 'lat' → latitud y 'lng' → longitud. El resto puede adoptar cualquier forma, admitiendo espacios, mayúsculas, tildes, etc. Por defecto *['lat', 'lng', 'popup']*\r\n*  **lineSeparator**: Carácter o cadena de caracteres que usarán para separar las líneas del archivo CSV. Por defecto *'\\n'*\r\n*  **fieldSeparator**: Carácter o cadena de caracteres que usarán para separar los campos del archivo CSV. Por defecto *';'*\r\n*  **deleteDobleQuotes**: Valor booleano que indica si se desea borrar las comillas que delimitan los campos del archivo CSV. Por defecto *true*\r\n*  **firstLineTitles**: Valor booleano que indica si la primera línea del archivo CSV contiene los rótulos de los campos. Por defecto *false*. Si se pone a true se ignorará la opción titles.\r\n\r\nMétodos\r\n-------\r\n\r\n*  **getPropertyTitle(** nombre_propiedad **)**: Devuelve el rótulo asociado al nombre de la propiedad que recibe como parámetro.\r\n*  **getPropertyName(** nombre_título **)**: Devuelve el nombre de la propiedad asociado al título del campo que recibe como parámetro.\r\n\r\nUso\r\n---\r\n\r\nIncluimos el plugin en nuestra página, detrás de leaflet.js:\r\n\r\n```html\r\n<script src=\"leaflet.geocsv.js\"></script>\r\n```\r\n\r\nCreamos la capa GeoCSV bien instanciando la clase o utilizando el alias L.geoCsv:\r\n\r\n```js\r\nvar mi_geocsv = L.geoCsv (csv_string, opciones);\r\n```\r\n\r\nLas opciones son las que hemos visto en el apartado anterior. El primer parámetro es un string con el contenido del fichero CSV. Si a la hora de instanciarlo no tenemos disponibles los datos, *csv_string* puede valer *null* y cargar los datos más adelante usando el método *addData*. Ejemplo de carga asíncrona usando jQuery:\r\n\r\n```js\r\n//...\r\nvar mi_geocsv = L.geoCsv (null, {firstLineTitles: true, fieldSeparator: ','});\r\n//...\r\n$.ajax ({\r\n  type:'GET',\r\n  dataType:'text',\r\n  url:'datos.csv',\r\n  error: function() {\r\n    alert('No se pudieron cargar los datos');\r\n  },\r\n  success: function(csv) {\r\n    mi_geocsv.addData(csv);\r\n    mapa.addLayer(mi_geocsv);\r\n  }\r\n});\r\n```\r\n\r\nEjemplos\r\n--------\r\n\r\nEn el subdirectorio *example* se encuentran ejemplos completos del uso del plugin:\r\n*  [Test dinámico de las opciones de configuración](example/options-test/index.html)\r\n*  [Pasando los datos a través de la URL](example/from-url/index.html)\r\n*  [Mapa de las sucursales de Bankia: GeoCSV+MarkerCluster](example/bankia/index.html)\r\n\r\n"}